<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RBAC on Hugo Relearn Theme</title><link>https://cks.ansilh.com/03-rbac/index.html</link><description>Recent content in RBAC on Hugo Relearn Theme</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://cks.ansilh.com/03-rbac/index.xml" rel="self" type="application/rss+xml"/><item><title>Service Accounts</title><link>https://cks.ansilh.com/03-rbac/01-sevice-accounts/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cks.ansilh.com/03-rbac/01-sevice-accounts/index.html</guid><description>The basic unit in Kubernetes is a Pod. Pods runs inside a namespace. Every namespace have a default service account.
Why we need service account?
If your workload needs to access the Kubernetes API, then we need a mechanism to authenticate and authorize the request. Here we can use the service account and assign permissions to it.
This service account can then be used inside a Pod.
Every namespace have a default service account.</description></item><item><title>Role and ClusterRole</title><link>https://cks.ansilh.com/03-rbac/02-role-cluster-role/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cks.ansilh.com/03-rbac/02-role-cluster-role/index.html</guid><description>The Role is for a namespace and ClusterRole is for entire cluster.
A role maps the permissions to an object.
Below role indicates get and list permissions to object Pod inside the namespace default.
kubectl create role myaccrole --verb=get --verb=list --resource=pod --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1 kind: Role metadata: creationTimestamp: null name: myaccrole namespace: default rules: - apiGroups: - &amp;#34;&amp;#34; resources: - pods verbs: - get - listBelow ClusterRole is same as Role, but the difference here is that the ClusterRole can be assigned to many namespaces.</description></item><item><title>RoleBinding and ClusterRoleBinding</title><link>https://cks.ansilh.com/03-rbac/03-rolebinding-clusterrole-binding/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cks.ansilh.com/03-rbac/03-rolebinding-clusterrole-binding/index.html</guid><description>To bind a role to &amp;ldquo;User&amp;rdquo;, &amp;ldquo;Group&amp;rdquo;, or &amp;ldquo;ServiceAccount&amp;rdquo;
I below example, we will give pod read/list access to service account mysvcacc
kubectl create rolebinding mysvcacc --role=myaccrole --serviceaccount=default:mysvcacc --dry-run=client -o yamlapiVersion: rbac.authorization.k8s.io/v1 kind: RoleBinding metadata: creationTimestamp: null name: mysvcacc roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: myaccrole subjects: - kind: ServiceAccount name: mysvcacc namespace: default</description></item></channel></rss>